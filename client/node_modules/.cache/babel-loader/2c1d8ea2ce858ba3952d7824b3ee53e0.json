{"ast":null,"code":"var _jsxFileName = \"/Users/wasim.akram/Desktop/Lama Dev/blog-app/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport './singlePost.scss';\nimport singlePostImage from '../../assets/images/post-image.jpg';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SinglePost = () => {\n  _s();\n\n  const [post, setPost] = useState({});\n  const [title, setTitle] = useState(post.title);\n  const [desc, setDesc] = useState(post.description);\n  const [formMode, setFormMode] = useState(false);\n  const [updated, setUpdated] = useState(false);\n  const location = useLocation();\n  const postId = location.pathname.split('/')[2];\n  const {\n    user\n  } = useContext(Context);\n  const PF = 'http://localhost:5000/uploads/';\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const res = await axios.get(`/posts/${postId}`);\n        setPost(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchPost();\n  }, [postId]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedPost = {\n      title,\n      description: desc,\n      username: user.username\n    };\n\n    try {\n      const res = axios.put(`/posts/${post._id}`, updatedPost);\n      res && setUpdated(true);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${postId}`, {\n        data: {\n          username: user.username\n        }\n      });\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui-singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui-singlePost__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ui-singlePost__wrapper__image\",\n        src: PF + post.photo,\n        alt: \"Single Post Pic\",\n        srcSet: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-singlePost__wrapper__header\",\n        children: [formMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ui-singlePost__wrapper__header__input\",\n          type: \"text\",\n          onChange: e => setTitle(e.target.value),\n          defaultValue: post.title,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ui-singlePost__wrapper__header__title\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", post.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), !formMode && user && user.username === post.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-singlePost__wrapper__header__icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ui-singlePost__wrapper__header__icons__icon far fa-edit\",\n            onClick: e => setFormMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ui-singlePost__wrapper__header__icons__icon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-singlePost__wrapper__info\",\n        children: formMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"ui-singlePost__wrapper__info__input\",\n          type: \"text\",\n          defaultValue: post.description,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui-singlePost__wrapper__info__writer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ui-singlePost__wrapper__info__writer__title\",\n              children: \"Author: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"ui-singlePost__wrapper__info__writer__value\",\n              to: `/?user=${post.username}`,\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui-singlePost__wrapper__info__date\",\n            children: new Date(post.createdAt).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-singlePost__wrapper__description\",\n        children: formMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-singlePost__wrapper__description__navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui-singlePost__wrapper__description__navigation__submit\",\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \" Update \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui-singlePost__wrapper__description__navigation__cancel\",\n            type: \"submit\",\n            onClick: e => setFormMode(false),\n            children: \" Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), updated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-singlePost__wrapper__message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Post successfully updated!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SinglePost, \"9voX6F4iCHVI+tSwndKx17lMllQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/wasim.akram/Desktop/Lama Dev/blog-app/client/src/components/singlePost/SinglePost.jsx"],"names":["React","useState","useEffect","useContext","singlePostImage","useLocation","Link","axios","Context","SinglePost","post","setPost","title","setTitle","desc","setDesc","description","formMode","setFormMode","updated","setUpdated","location","postId","pathname","split","user","PF","fetchPost","res","get","data","err","console","log","handleSubmit","e","preventDefault","updatedPost","username","put","_id","window","reload","error","handleDelete","delete","photo","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport './singlePost.scss';\n\nimport singlePostImage from '../../assets/images/post-image.jpg';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Context } from '../../context/Context';\n\n\nexport const SinglePost = () => {\n  const [ post, setPost ] = useState( {} );\n  const [ title, setTitle ] = useState( post.title );\n  const [ desc , setDesc ] = useState( post.description );\n  const [ formMode, setFormMode ] = useState( false );\n  const [ updated , setUpdated ] = useState( false );\n\n  const location = useLocation();\n  const postId = location.pathname.split('/')[ 2 ];\n  const { user } = useContext( Context );\n\n  const PF = 'http://localhost:5000/uploads/';\n\n  useEffect( () => {\n      const fetchPost = async () => {\n        try {\n            const res = await axios.get(`/posts/${ postId }`);\n            setPost( res.data );\n        } catch (err) {\n          console.log( err );\n        }\n      }\n      fetchPost();\n\n  }, [ postId ] );\n\n  const handleSubmit = async ( e ) => {\n      e.preventDefault();\n\n      const updatedPost = {\n          title,\n          description: desc,\n          username: user.username\n      }\n\n      try {\n          const res = axios.put(`/posts/${ post._id }`, updatedPost );\n\n          res && setUpdated( true );\n          window.location.reload();\n      } catch (error) {\n          console.log( error )\n      }\n  }\n\n  const handleDelete = async () => {\n      try {\n          await axios.delete(`/posts/${ postId }`, { data: {\n              username: user.username\n          } } )\n      } catch (error) {\n          \n      }\n  }\n\n  return(\n    <div className='ui-singlePost'>\n        <div className=\"ui-singlePost__wrapper\">\n            <img className='ui-singlePost__wrapper__image' src={ PF + post.photo } alt=\"Single Post Pic\" srcSet=\"\" />\n            <div className=\"ui-singlePost__wrapper__header\">\n                {\n                    formMode ?\n                    <input\n                        className=\"ui-singlePost__wrapper__header__input\"\n                        type='text'\n                        onChange={ e => setTitle( e.target.value ) }\n                        defaultValue={ post.title }\n                        autoFocus={ true }\n                    /> :\n                    <p className=\"ui-singlePost__wrapper__header__title\">\n                        <span> { post.title } </span>\n                    </p>\n                }\n                {\n                    !formMode && user && user.username === post.username &&\n                    <div className=\"ui-singlePost__wrapper__header__icons\">\n                        <i \n                            className=\"ui-singlePost__wrapper__header__icons__icon far fa-edit\"\n                            onClick={ e => setFormMode( true ) }\n                        ></i>\n                        <i \n                            className=\"ui-singlePost__wrapper__header__icons__icon far fa-trash-alt\"\n                            onClick={ handleDelete }\n                        ></i>\n                    </div>\n                }\n            </div>\n            <div className=\"ui-singlePost__wrapper__info\">\n                {\n                    formMode ?\n                    <textarea\n                        className=\"ui-singlePost__wrapper__info__input\"\n                        type='text'\n                        defaultValue={ post.description }\n                        onChange={ e => setDesc( e.target.value ) }\n                    /> :\n                    <>\n                        <div className=\"ui-singlePost__wrapper__info__writer\">\n                            <span className='ui-singlePost__wrapper__info__writer__title' >Author: </span>\n                            <Link className='ui-singlePost__wrapper__info__writer__value' to={ `/?user=${ post.username }` } >{ post.username }</Link>\n                        </div>\n                        <div className=\"ui-singlePost__wrapper__info__date\">{ new Date( post.createdAt ).toDateString() }</div>\n                    </>\n                }\n            </div>\n            <div className=\"ui-singlePost__wrapper__description\">\n                {\n                    formMode ?\n                    <div className=\"ui-singlePost__wrapper__description__navigation\">\n                        <button\n                            className=\"ui-singlePost__wrapper__description__navigation__submit\"\n                            type='submit'\n                            onClick={ handleSubmit }\n                        > Update </button>\n                        <button\n                            className=\"ui-singlePost__wrapper__description__navigation__cancel\"\n                            type='submit'\n                            onClick={ e => setFormMode( false ) }\n                        > Cancel </button>\n                    </div> :\n                    <span>{ post.description }</span>\n                }\n            </div>\n            {\n                updated &&\n                <div className='ui-singlePost__wrapper__message' >\n                    <span>Post successfully updated!</span>\n                </div>\n            }\n        </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}